buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: "maven"
apply plugin: 'net.minecraftforge.gradle.forge'

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        name 'JEI'
        url "http://dvs1.progwml6.com/files/maven"
    }
}


version = "${minecraft_version}-" + getVersion();

group = "com.teamacronymcoders.base" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "base"

minecraft {
    version = "${minecraft_version}-${forge_version}"
    runDir = "run"

    mappings = "${mappings_version}"

    replace "@VERSION@", project.version
    replaceIn "Reference.java"
}

dependencies {
    deobfCompile "mezz.jei:jei_${minecraft_version}:${jei_version}"

    // test
    testCompile 'junit:junit:4.12'
}

def commonManifest = {
    attributes 'Main-Class': 'com.acronym.base.Base'
    attributes 'FMLAT': 'base_at.cfg'
}

jar {
    manifest commonManifest
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    manifest commonManifest
}

task srcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
    manifest commonManifest
}

artifacts {
    archives deobfJar
    archives srcJar
}

configurations {
    deployerJars
}

dependencies {
    deployerJars 'org.apache.maven.wagon:wagon-ftp:2.2'
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "file:///var/www/html/maven")
        }
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

String getVersion() {
    String version = "${base_version}"
    String branch = System.getenv("BRANCH") != null ? System.getenv("BRANCH") : ""

    if(!branch.equals("")) {
        version += "-" + branch

        String buildNumber = getBuildNumber()
        if(!buildNumber.equals("")) {
            version += "." + buildNumber;
        }
    }

    return version;
}

String getBuildNumber() {
    String buildNumber = System.getenv("BUILD_NUMBER") != null ? System.getenv("BUILD_NUMBER") : ""
    if(buildNumber.equals("")) {
        buildNumber = System.getenv("bamboo_buildNumber") != null ? "." + System.getenv("bamboo_buildNumber") : ""
    }
    return buildNumber;
}
